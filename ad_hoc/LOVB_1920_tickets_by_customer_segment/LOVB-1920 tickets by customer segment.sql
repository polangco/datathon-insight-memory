-- prepare the insider data
drop table if exists tmp_insiders_;
with insiders as (
	select distinct
	
		coalesce(a.insider_id, profile_id) as insider_id, 
		coalesce(a.email, b.email) as email, 
		coalesce(a.address_zip, b.address_zip) as address_zip
	
	from prod_raw.stg_insider_demographics as a
	
	full join prod_raw.stg_dt_insiders as b
	on a.email = b.email
),

insiders_sub as (
	select * 
	from insiders as a
	where 
		not exists (select 1 from prod_raw.stg_braze_unsub as b where a.email = b.email)
		and email is not null
		and email ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
), 

insiders_team as (
	select 
	
		a.insider_id, 
		a.email, 
		a.address_zip,
		b.is_atlanta,
		b.is_austin,
		b.is_houston, 
		b.is_madison,
		b.is_omaha,
		b.is_salt_lake
	
	from insiders_sub as a
	left join prod_raw.stg_insider_team as b
	on a.insider_id = b.insider_id

)

select * 
into TEMPORARY table tmp_insiders_
from insiders_team
;

-- prepare ticket sales
drop table if exists tmp_tickets_;
with ticket_sales as (
	select distinct email, pro_team, 'Single Match' as ticket_type from prod_raw.stg_ticketmaster_market_sales
	union
	select distinct email, pro_team, 'Single Match' as ticket_type from prod_raw.stg_paciolan_tickets
	union
	select distinct email, pro_team, 'Season Tickets' as ticket_type from prod_raw.stg_season_tickets
)

select *
into TEMPORARY table tmp_tickets_
from ticket_sales
; 

-- market zip codes
drop table if exists tmp_zip_to_market_; 
with zip_codes as (

	select distinct
		address_zip, 
		case 
			when left(address_zip, 5) in ('30301', '30302', '30303', '30304', '30305', '30306', '30307', '30308', '30309', '30310', '30311', '30312', '30313', '30314', '30315', '30316', '30317', '30318', '30319', '30320', '30321', '30322', '30324', '30326', '30327', '30328', '30329', '30330', '30331', '30332', '30333', '30334', '30335', '30336', '30337', '30338', '30339', '30340', '30341', '30342', '30343', '30344', '30345', '30346', '30347', '30348', '30349', '30350', '30351', '30352', '30353', '30354', '30355', '30356', '30357', '30358', '30359', '30360', '30361', '30362', '30363', '30364', '30365', '30366', '30367', '30368', '30369', '30370', '30371', '30372', '30373', '30374', '30375', '30376', '30377', '30378', '30379', '30380', '30381', '30382', '30383', '30384', '30385', '30386', '30387', '30388', '30389', '30390', '30391', '30392', '30393', '30394', '30395', '30396', '30397', '30398', '30399', '30002', '30003', '30004', '30005', '30006', '30007', '30008', '30009', '30010', '30011', '30012', '30013', '30014', '30015', '30016', '30017', '30018', '30019', '30020', '30021', '30022', '30023', '30024', '30025', '30026', '30027', '30028', '30029', '30030', '30031', '30032', '30033', '30034', '30035', '30036', '30037', '30038', '30039', '30040', '30041', '30042', '30043', '30044', '30045', '30046', '30047', '30048', '30049', '30050', '30051', '30052', '30053', '30054', '30055', '30056', '30057', '30058', '30059', '30060', '30061', '30062', '30063', '30064', '30065', '30066', '30067', '30068', '30069', '30070', '30071', '30072', '30073', '30074', '30075', '30076', '30077', '30078', '30079', '30080', '30081', '30082', '30083', '30084', '30085', '30086', '30087', '30088', '30089', '30090', '30091', '30092', '30093', '30094', '30095', '30096', '30097', '30098', '30099') then 'Atlanta'
			when left(address_zip, 5) in ('73301', '78701', '78702', '78703', '78704', '78705', '78708', '78709', '78710', '78711', '78712', '78713', '78714', '78715', '78716', '78717', '78718', '78719', '78720', '78721', '78722', '78723', '78724', '78725', '78726', '78727', '78728', '78729', '78730', '78731', '78732', '78733', '78734', '78735', '78736', '78737', '78738', '78739', '78740', '78741', '78742', '78743', '78744', '78745', '78746', '78747', '78748', '78749', '78750', '78751', '78752', '78753', '78754', '78755', '78756', '78757', '78758', '78759', '78760', '78761', '78762', '78763', '78764', '78765', '78766', '78767', '78768', '78769', '78770', '78771', '78772', '78773', '78774', '78775', '78776', '78777', '78778', '78779', '78780', '78781', '78782', '78783', '78784', '78785', '78786', '78787', '78788', '78789', '78790', '78791', '78792', '78793', '78794', '78795', '78796', '78797', '78798', '78799', '78610', '78611', '78612', '78613', '78614', '78615', '78616', '78617', '78618', '78619', '78620', '78621', '78622', '78623', '78624', '78625', '78626', '78627', '78628', '78629', '78630', '78631', '78632', '78633', '78634', '78635', '78636', '78637', '78638', '78639', '78640', '78641', '78642', '78643', '78644', '78645', '78646', '78647', '78648', '78649', '78650', '78651', '78652', '78653', '78654', '78655', '78656', '78657', '78658', '78659', '78660', '78661', '78662', '78663', '78664', '78665', '78666', '78667', '78668', '78669', '78670', '78671', '78672', '78673', '78674', '78675', '78676', '78677', '78678', '78679', '78680', '78681', '78682', '78683', '78684', '78685', '78686', '78687', '78688', '78689', '78690', '78691', '78692', '78693', '78694', '78695', '78696', '78697', '78698', '78699') then 'Austin'
			when left(address_zip, 5) in ('77001', '77002', '77003', '77004', '77005', '77006', '77007', '77008', '77009', '77010', '77011', '77012', '77013', '77014', '77015', '77016', '77017', '77018', '77019', '77020', '77021', '77022', '77023', '77024', '77025', '77026', '77027', '77028', '77029', '77030', '77031', '77032', '77033', '77034', '77035', '77036', '77037', '77038', '77039', '77040', '77041', '77042', '77043', '77044', '77045', '77046', '77047', '77048', '77049', '77050', '77051', '77052', '77053', '77054', '77055', '77056', '77057', '77058', '77059', '77060', '77061', '77062', '77063', '77064', '77065', '77066', '77067', '77068', '77069', '77070', '77071', '77072', '77073', '77074', '77075', '77076', '77077', '77078', '77079', '77080', '77081', '77082', '77083', '77084', '77085', '77086', '77087', '77088', '77089', '77090', '77091', '77092', '77093', '77094', '77095', '77096', '77097', '77098', '77099', '77501', '77502', '77503', '77504', '77505', '77506', '77507', '77508', '77509', '77510', '77511', '77512', '77513', '77514', '77515', '77516', '77517', '77518', '77519', '77520', '77521', '77522', '77523', '77524', '77525', '77526', '77527', '77528', '77529', '77530', '77531', '77532', '77533', '77534', '77535', '77536', '77537', '77538', '77539', '77540', '77541', '77542', '77543', '77544', '77545', '77546', '77547', '77548', '77549', '77550', '77551', '77552', '77553', '77554', '77555', '77556', '77557', '77558', '77559', '77560', '77561', '77562', '77563', '77564', '77565', '77566', '77567', '77568', '77569', '77570', '77571', '77572', '77573', '77574', '77575', '77576', '77577', '77578', '77579', '77580', '77581', '77582', '77583', '77584', '77585', '77586', '77587', '77588', '77589', '77590', '77591', '77592', '77593', '77594', '77595', '77596', '77597', '77598', '77599') then 'Houston'
			when left(address_zip, 5) in ('53701', '53702', '53703', '53704', '53705', '53706', '53707', '53708', '53709', '53710', '53711', '53712', '53713', '53714', '53715', '53716', '53717', '53718', '53719', '53720', '53721', '53722', '53723', '53724', '53725', '53726', '53727', '53728', '53729', '53730', '53731', '53732', '53733', '53734', '53735', '53736', '53737', '53738', '53739', '53740', '53741', '53742', '53743', '53744', '53745', '53746', '53747', '53748', '53749', '53750', '53751', '53752', '53753', '53754', '53755', '53756', '53757', '53758', '53759', '53760', '53761', '53762', '53763', '53764', '53765', '53766', '53767', '53768', '53769', '53770', '53771', '53772', '53773', '53774', '53775', '53776', '53777', '53778', '53779', '53780', '53781', '53782', '53783', '53784', '53785', '53786', '53787', '53788', '53789', '53790', '53791', '53792', '53793', '53794', '53795', '53796', '53797', '53798', '53799', '53501', '53502', '53503', '53504', '53505', '53506', '53507', '53508', '53509', '53510', '53511', '53512', '53513', '53514', '53515', '53516', '53517', '53518', '53519', '53520', '53521', '53522', '53523', '53524', '53525', '53526', '53527', '53528', '53529', '53530', '53531', '53532', '53533', '53534', '53535', '53536', '53537', '53538', '53539', '53540', '53541', '53542', '53543', '53544', '53545', '53546', '53547', '53548', '53549', '53550', '53551', '53552', '53553', '53554', '53555', '53556', '53557', '53558', '53559', '53560', '53561', '53562', '53563', '53564', '53565', '53566', '53567', '53568', '53569', '53570', '53571', '53572', '53573', '53574', '53575', '53576', '53577', '53578', '53579', '53580', '53581', '53582', '53583', '53584', '53585', '53586', '53587', '53588', '53589', '53590', '53591', '53592', '53593', '53594', '53595', '53596', '53597', '53598', '53599') then 'Madison'
			when left(address_zip, 5) in ('68101', '68102', '68103', '68104', '68105', '68106', '68107', '68108', '68109', '68110', '68111', '68112', '68113', '68114', '68115', '68116', '68117', '68118', '68119', '68120', '68121', '68122', '68123', '68124', '68125', '68126', '68127', '68128', '68129', '68130', '68131', '68132', '68133', '68134', '68135', '68136', '68137', '68138', '68139', '68140', '68141', '68142', '68143', '68144', '68145', '68146', '68147', '68148', '68149', '68150', '68151', '68152', '68153', '68154', '68155', '68156', '68157', '68158', '68159', '68160', '68161', '68162', '68163', '68164', '68165', '68166', '68167', '68168', '68169', '68170', '68171', '68172', '68173', '68174', '68175', '68176', '68177', '68178', '68179', '68180', '68181', '68182', '68183', '68184', '68185', '68186', '68187', '68188', '68189', '68190', '68191', '68192', '68193', '68194', '68195', '68196', '68197', '68198', '68199', '68001', '68002', '68003', '68004', '68005', '68006', '68007', '68008', '68009', '68010', '68011', '68012', '68013', '68014', '68015', '68016', '68017', '68018', '68019', '68020', '68021', '68022', '68023', '68024', '68025', '68026', '68027', '68028', '68029', '68030', '68031', '68032', '68033', '68034', '68035', '68036', '68037', '68038', '68039', '68040', '68041', '68042', '68043', '68044', '68045', '68046', '68047', '68048', '68049', '68050', '68051', '68052', '68053', '68054', '68055', '68056', '68057', '68058', '68059', '68060', '68061', '68062', '68063', '68064', '68065', '68066', '68067', '68068', '68069', '68070', '68071', '68072', '68073', '68074', '68075', '68076', '68077', '68078', '68079', '68080', '68081', '68082', '68083', '68084', '68085', '68086', '68087', '68088', '68089', '68090', '68091', '68092', '68093', '68094', '68095', '68096', '68097', '68098', '68099') then 'Omaha'
			when left(address_zip, 5) in ('84101', '84102', '84103', '84104', '84105', '84106', '84107', '84108', '84109', '84110', '84111', '84112', '84113', '84114', '84115', '84116', '84117', '84118', '84119', '84120', '84121', '84122', '84123', '84124', '84125', '84126', '84127', '84128', '84129', '84130', '84131', '84132', '84133', '84134', '84135', '84136', '84137', '84138', '84139', '84140', '84141', '84142', '84143', '84144', '84145', '84146', '84147', '84148', '84149', '84150', '84151', '84152', '84153', '84154', '84155', '84156', '84157', '84158', '84159', '84160', '84161', '84162', '84163', '84164', '84165', '84166', '84167', '84168', '84169', '84170', '84171', '84172', '84173', '84174', '84175', '84176', '84177', '84178', '84179', '84180', '84181', '84182', '84183', '84184', '84185', '84186', '84187', '84188', '84189', '84190', '84191', '84192', '84193', '84194', '84195', '84196', '84197', '84198', '84199', '84001', '84002', '84003', '84004', '84005', '84006', '84007', '84008', '84009', '84010', '84011', '84012', '84013', '84014', '84015', '84016', '84017', '84018', '84019', '84020', '84021', '84022', '84023', '84024', '84025', '84026', '84027', '84028', '84029', '84030', '84031', '84032', '84033', '84034', '84035', '84036', '84037', '84038', '84039', '84040', '84041', '84042', '84043', '84044', '84045', '84046', '84047', '84048', '84049', '84050', '84051', '84052', '84053', '84054', '84055', '84056', '84057', '84058', '84059', '84060', '84061', '84062', '84063', '84064', '84065', '84066', '84067', '84068', '84069', '84070', '84071', '84072', '84073', '84074', '84075', '84076', '84077', '84078', '84079', '84080', '84081', '84082', '84083', '84084', '84085', '84086', '84087', '84088', '84089', '84090', '84091', '84092', '84093', '84094', '84095', '84096', '84097', '84098', '84099') then 'Salt Lake City'
			else 'Non Pro City'
		end as market_definition
	from tmp_insiders_
	where address_zip is not null

)

select * 
into temporary table tmp_zip_to_market_
from zip_codes
;


select
	a.insider_id,
	a.address_zip, 
	case 
		when (a.is_atlanta = true and (a.is_austin = true or a.is_houston = true or a.is_madison = true or a.is_omaha = true or a.is_salt_lake = true)) or
		     (a.is_austin = true and (a.is_houston = true or a.is_madison = true or a.is_omaha = true or a.is_salt_lake = true)) or
		     (a.is_houston = true and (a.is_madison = true or a.is_omaha = true or a.is_salt_lake = true)) or
		     (a.is_madison = true and (a.is_omaha = true or a.is_salt_lake = true)) or
		     (a.is_omaha = true and a.is_salt_lake = true) then 'Multiple Teams'
		when a.is_atlanta = true then 'Atlanta'
		when a.is_austin = true then 'Austin'
		when a.is_houston = true then 'Houston'
		when a.is_madison = true then 'Madison'
		when a.is_omaha = true then 'Omaha'
		when a.is_salt_lake = true then 'Salt Lake City'
		else 'Unknown'
	end as favorite_team, 
	coalesce(c.market_definition, 'Unknown') as market_definition,
	coalesce(b.ticket_type, 'None Purchaser') as ticket_type,
	coalesce(b.pro_team, 'None Purchaser') as pro_team

from tmp_insiders_ as a
left join tmp_tickets_ as b
on a.email = b.email
left join tmp_zip_to_market_ as c
on a.address_zip = c.address_zip
order by insider_id
;


/********************************************************************************************************************************/
/********************************************************************************************************************************/
/********************************************************************************************************************************/
/********************************************************************************************************************************/


-- prepare the club family data
drop table if exists tmp_familes_;
with families as (
	select 
		a.lovfid, 
		a.lovpid, 
		a.email, 
		a.address_zip, 
		b.club_id,
		b.club_name, 
		b.is_active,
		b.is_rostered
		
	from prod_id_graph.dim_family_all_people_details as a
	
	inner join prod_id_graph.dim_family_status as b
	on a.lovfid = b.lovfid
),

families_sub as (
	select * 
	from families as a
	where 
		not exists (select 1 from prod_raw.stg_braze_unsub as b where a.email = b.email)
		and email is not null
		and email ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
)

select * 
into TEMPORARY table tmp_families_
from families_sub
;

-- prepare ticket sales
drop table if exists tmp_tickets_;
with ticket_sales as (
	select distinct email, pro_team, 'Single Match' as ticket_type from prod_raw.stg_ticketmaster_market_sales
	union
	select distinct email, pro_team, 'Single Match' as ticket_type from prod_raw.stg_paciolan_tickets
	union
	select distinct email, pro_team, 'Season Tickets' as ticket_type from prod_raw.stg_season_tickets
)

select *
into TEMPORARY table tmp_tickets_
from ticket_sales
; 

-- market zip codes
drop table if exists tmp_zip_to_market_; 
with zip_codes as (

	select distinct
		address_zip, 
		case 
			when left(address_zip, 5) in ('30301', '30302', '30303', '30304', '30305', '30306', '30307', '30308', '30309', '30310', '30311', '30312', '30313', '30314', '30315', '30316', '30317', '30318', '30319', '30320', '30321', '30322', '30324', '30326', '30327', '30328', '30329', '30330', '30331', '30332', '30333', '30334', '30335', '30336', '30337', '30338', '30339', '30340', '30341', '30342', '30343', '30344', '30345', '30346', '30347', '30348', '30349', '30350', '30351', '30352', '30353', '30354', '30355', '30356', '30357', '30358', '30359', '30360', '30361', '30362', '30363', '30364', '30365', '30366', '30367', '30368', '30369', '30370', '30371', '30372', '30373', '30374', '30375', '30376', '30377', '30378', '30379', '30380', '30381', '30382', '30383', '30384', '30385', '30386', '30387', '30388', '30389', '30390', '30391', '30392', '30393', '30394', '30395', '30396', '30397', '30398', '30399', '30002', '30003', '30004', '30005', '30006', '30007', '30008', '30009', '30010', '30011', '30012', '30013', '30014', '30015', '30016', '30017', '30018', '30019', '30020', '30021', '30022', '30023', '30024', '30025', '30026', '30027', '30028', '30029', '30030', '30031', '30032', '30033', '30034', '30035', '30036', '30037', '30038', '30039', '30040', '30041', '30042', '30043', '30044', '30045', '30046', '30047', '30048', '30049', '30050', '30051', '30052', '30053', '30054', '30055', '30056', '30057', '30058', '30059', '30060', '30061', '30062', '30063', '30064', '30065', '30066', '30067', '30068', '30069', '30070', '30071', '30072', '30073', '30074', '30075', '30076', '30077', '30078', '30079', '30080', '30081', '30082', '30083', '30084', '30085', '30086', '30087', '30088', '30089', '30090', '30091', '30092', '30093', '30094', '30095', '30096', '30097', '30098', '30099') then 'Atlanta'
			when left(address_zip, 5) in ('73301', '78701', '78702', '78703', '78704', '78705', '78708', '78709', '78710', '78711', '78712', '78713', '78714', '78715', '78716', '78717', '78718', '78719', '78720', '78721', '78722', '78723', '78724', '78725', '78726', '78727', '78728', '78729', '78730', '78731', '78732', '78733', '78734', '78735', '78736', '78737', '78738', '78739', '78740', '78741', '78742', '78743', '78744', '78745', '78746', '78747', '78748', '78749', '78750', '78751', '78752', '78753', '78754', '78755', '78756', '78757', '78758', '78759', '78760', '78761', '78762', '78763', '78764', '78765', '78766', '78767', '78768', '78769', '78770', '78771', '78772', '78773', '78774', '78775', '78776', '78777', '78778', '78779', '78780', '78781', '78782', '78783', '78784', '78785', '78786', '78787', '78788', '78789', '78790', '78791', '78792', '78793', '78794', '78795', '78796', '78797', '78798', '78799', '78610', '78611', '78612', '78613', '78614', '78615', '78616', '78617', '78618', '78619', '78620', '78621', '78622', '78623', '78624', '78625', '78626', '78627', '78628', '78629', '78630', '78631', '78632', '78633', '78634', '78635', '78636', '78637', '78638', '78639', '78640', '78641', '78642', '78643', '78644', '78645', '78646', '78647', '78648', '78649', '78650', '78651', '78652', '78653', '78654', '78655', '78656', '78657', '78658', '78659', '78660', '78661', '78662', '78663', '78664', '78665', '78666', '78667', '78668', '78669', '78670', '78671', '78672', '78673', '78674', '78675', '78676', '78677', '78678', '78679', '78680', '78681', '78682', '78683', '78684', '78685', '78686', '78687', '78688', '78689', '78690', '78691', '78692', '78693', '78694', '78695', '78696', '78697', '78698', '78699') then 'Austin'
			when left(address_zip, 5) in ('77001', '77002', '77003', '77004', '77005', '77006', '77007', '77008', '77009', '77010', '77011', '77012', '77013', '77014', '77015', '77016', '77017', '77018', '77019', '77020', '77021', '77022', '77023', '77024', '77025', '77026', '77027', '77028', '77029', '77030', '77031', '77032', '77033', '77034', '77035', '77036', '77037', '77038', '77039', '77040', '77041', '77042', '77043', '77044', '77045', '77046', '77047', '77048', '77049', '77050', '77051', '77052', '77053', '77054', '77055', '77056', '77057', '77058', '77059', '77060', '77061', '77062', '77063', '77064', '77065', '77066', '77067', '77068', '77069', '77070', '77071', '77072', '77073', '77074', '77075', '77076', '77077', '77078', '77079', '77080', '77081', '77082', '77083', '77084', '77085', '77086', '77087', '77088', '77089', '77090', '77091', '77092', '77093', '77094', '77095', '77096', '77097', '77098', '77099', '77501', '77502', '77503', '77504', '77505', '77506', '77507', '77508', '77509', '77510', '77511', '77512', '77513', '77514', '77515', '77516', '77517', '77518', '77519', '77520', '77521', '77522', '77523', '77524', '77525', '77526', '77527', '77528', '77529', '77530', '77531', '77532', '77533', '77534', '77535', '77536', '77537', '77538', '77539', '77540', '77541', '77542', '77543', '77544', '77545', '77546', '77547', '77548', '77549', '77550', '77551', '77552', '77553', '77554', '77555', '77556', '77557', '77558', '77559', '77560', '77561', '77562', '77563', '77564', '77565', '77566', '77567', '77568', '77569', '77570', '77571', '77572', '77573', '77574', '77575', '77576', '77577', '77578', '77579', '77580', '77581', '77582', '77583', '77584', '77585', '77586', '77587', '77588', '77589', '77590', '77591', '77592', '77593', '77594', '77595', '77596', '77597', '77598', '77599') then 'Houston'
			when left(address_zip, 5) in ('53701', '53702', '53703', '53704', '53705', '53706', '53707', '53708', '53709', '53710', '53711', '53712', '53713', '53714', '53715', '53716', '53717', '53718', '53719', '53720', '53721', '53722', '53723', '53724', '53725', '53726', '53727', '53728', '53729', '53730', '53731', '53732', '53733', '53734', '53735', '53736', '53737', '53738', '53739', '53740', '53741', '53742', '53743', '53744', '53745', '53746', '53747', '53748', '53749', '53750', '53751', '53752', '53753', '53754', '53755', '53756', '53757', '53758', '53759', '53760', '53761', '53762', '53763', '53764', '53765', '53766', '53767', '53768', '53769', '53770', '53771', '53772', '53773', '53774', '53775', '53776', '53777', '53778', '53779', '53780', '53781', '53782', '53783', '53784', '53785', '53786', '53787', '53788', '53789', '53790', '53791', '53792', '53793', '53794', '53795', '53796', '53797', '53798', '53799', '53501', '53502', '53503', '53504', '53505', '53506', '53507', '53508', '53509', '53510', '53511', '53512', '53513', '53514', '53515', '53516', '53517', '53518', '53519', '53520', '53521', '53522', '53523', '53524', '53525', '53526', '53527', '53528', '53529', '53530', '53531', '53532', '53533', '53534', '53535', '53536', '53537', '53538', '53539', '53540', '53541', '53542', '53543', '53544', '53545', '53546', '53547', '53548', '53549', '53550', '53551', '53552', '53553', '53554', '53555', '53556', '53557', '53558', '53559', '53560', '53561', '53562', '53563', '53564', '53565', '53566', '53567', '53568', '53569', '53570', '53571', '53572', '53573', '53574', '53575', '53576', '53577', '53578', '53579', '53580', '53581', '53582', '53583', '53584', '53585', '53586', '53587', '53588', '53589', '53590', '53591', '53592', '53593', '53594', '53595', '53596', '53597', '53598', '53599') then 'Madison'
			when left(address_zip, 5) in ('68101', '68102', '68103', '68104', '68105', '68106', '68107', '68108', '68109', '68110', '68111', '68112', '68113', '68114', '68115', '68116', '68117', '68118', '68119', '68120', '68121', '68122', '68123', '68124', '68125', '68126', '68127', '68128', '68129', '68130', '68131', '68132', '68133', '68134', '68135', '68136', '68137', '68138', '68139', '68140', '68141', '68142', '68143', '68144', '68145', '68146', '68147', '68148', '68149', '68150', '68151', '68152', '68153', '68154', '68155', '68156', '68157', '68158', '68159', '68160', '68161', '68162', '68163', '68164', '68165', '68166', '68167', '68168', '68169', '68170', '68171', '68172', '68173', '68174', '68175', '68176', '68177', '68178', '68179', '68180', '68181', '68182', '68183', '68184', '68185', '68186', '68187', '68188', '68189', '68190', '68191', '68192', '68193', '68194', '68195', '68196', '68197', '68198', '68199', '68001', '68002', '68003', '68004', '68005', '68006', '68007', '68008', '68009', '68010', '68011', '68012', '68013', '68014', '68015', '68016', '68017', '68018', '68019', '68020', '68021', '68022', '68023', '68024', '68025', '68026', '68027', '68028', '68029', '68030', '68031', '68032', '68033', '68034', '68035', '68036', '68037', '68038', '68039', '68040', '68041', '68042', '68043', '68044', '68045', '68046', '68047', '68048', '68049', '68050', '68051', '68052', '68053', '68054', '68055', '68056', '68057', '68058', '68059', '68060', '68061', '68062', '68063', '68064', '68065', '68066', '68067', '68068', '68069', '68070', '68071', '68072', '68073', '68074', '68075', '68076', '68077', '68078', '68079', '68080', '68081', '68082', '68083', '68084', '68085', '68086', '68087', '68088', '68089', '68090', '68091', '68092', '68093', '68094', '68095', '68096', '68097', '68098', '68099') then 'Omaha'
			when left(address_zip, 5) in ('84101', '84102', '84103', '84104', '84105', '84106', '84107', '84108', '84109', '84110', '84111', '84112', '84113', '84114', '84115', '84116', '84117', '84118', '84119', '84120', '84121', '84122', '84123', '84124', '84125', '84126', '84127', '84128', '84129', '84130', '84131', '84132', '84133', '84134', '84135', '84136', '84137', '84138', '84139', '84140', '84141', '84142', '84143', '84144', '84145', '84146', '84147', '84148', '84149', '84150', '84151', '84152', '84153', '84154', '84155', '84156', '84157', '84158', '84159', '84160', '84161', '84162', '84163', '84164', '84165', '84166', '84167', '84168', '84169', '84170', '84171', '84172', '84173', '84174', '84175', '84176', '84177', '84178', '84179', '84180', '84181', '84182', '84183', '84184', '84185', '84186', '84187', '84188', '84189', '84190', '84191', '84192', '84193', '84194', '84195', '84196', '84197', '84198', '84199', '84001', '84002', '84003', '84004', '84005', '84006', '84007', '84008', '84009', '84010', '84011', '84012', '84013', '84014', '84015', '84016', '84017', '84018', '84019', '84020', '84021', '84022', '84023', '84024', '84025', '84026', '84027', '84028', '84029', '84030', '84031', '84032', '84033', '84034', '84035', '84036', '84037', '84038', '84039', '84040', '84041', '84042', '84043', '84044', '84045', '84046', '84047', '84048', '84049', '84050', '84051', '84052', '84053', '84054', '84055', '84056', '84057', '84058', '84059', '84060', '84061', '84062', '84063', '84064', '84065', '84066', '84067', '84068', '84069', '84070', '84071', '84072', '84073', '84074', '84075', '84076', '84077', '84078', '84079', '84080', '84081', '84082', '84083', '84084', '84085', '84086', '84087', '84088', '84089', '84090', '84091', '84092', '84093', '84094', '84095', '84096', '84097', '84098', '84099') then 'Salt Lake City'
			else 'Non Pro City'
		end as market_definition
	from tmp_families_
	where address_zip is not null

)

select * 
into temporary table tmp_zip_to_market_
from zip_codes
;


select
	a.lovpid,
	a.address_zip, 
	a.is_active,
	a.is_rostered,
	case 
		when a.is_active and a.is_rostered then 'Active - Rostered'
		when a.is_active then 'Active - Non Rostered'
		else 'Not Active'
	end as active_status,
	coalesce(c.market_definition, 'Unknown') as market_definition,
	coalesce(b.ticket_type, 'None Purchaser') as ticket_type,
	coalesce(b.pro_team, 'None Purchaser') as pro_team

from tmp_families_ as a
left join tmp_tickets_ as b
on a.email = b.email
left join tmp_zip_to_market_ as c
on a.address_zip = c.address_zip
order by a.lovpid
;



/********************************************************************************************************************************/
/********************************************************************************************************************************/
/********************************************************************************************************************************/
/********************************************************************************************************************************/


-- prepare the club coaches data
drop table if exists tmp_coaches_;
with coaches as (
	select distinct
		club_name,
		email, 
		is_coach,
		is_director
	
	from prod_raw.stg_coaches_directors
	
	where email_is_valid
),

coaches_sub as (
	select * 
	from coaches as a
	where 
		not exists (select 1 from prod_raw.stg_braze_unsub as b where a.email = b.email)
		and email is not null
		and email ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
)

select * 
into TEMPORARY table tmp_coaches_
from coaches_sub
;

-- prepare ticket sales
drop table if exists tmp_tickets_;
with ticket_sales as (
	select distinct email, pro_team, 'Single Match' as ticket_type from prod_raw.stg_ticketmaster_market_sales
	union
	select distinct email, pro_team, 'Single Match' as ticket_type from prod_raw.stg_paciolan_tickets
	union
	select distinct email, pro_team, 'Season Tickets' as ticket_type from prod_raw.stg_season_tickets
)

select *
into TEMPORARY table tmp_tickets_
from ticket_sales
; 

-- market zip codes
drop table if exists tmp_zip_to_market_; 
with zip_codes as (

	select distinct
		club_name,
		case 
			when club_name in ('A5 Volleyball', 'Georgia Beach Volleyball', 'Elite VBTC') then 'Atlanta'
			when club_name in ('Roots Volleyball Club', 'Silver Beach Volleyball') then 'Austin'
			when club_name in ('Houston Skyline') then 'Houston'
			when club_name in ('FC Elite Volleyball', 'Madtown Volleyball', 'One Wisconsin Volleyball') then 'Madison'
			when club_name in ('Premier Nebraska') then 'Omaha'
			when club_name in ('Club V Sports', 'Club 801 Volleyball') then 'Salt Lake City'
			else 'Non Pro City'
		end as market_definition
	from tmp_coaches_
	where club_name is not null

)

select * 
into temporary table tmp_zip_to_market_
from zip_codes
;


select
	a.email,
	a.is_coach,
	a.is_director, 
	coalesce(c.market_definition, 'Unknown') as market_definition,
	coalesce(b.ticket_type, 'None Purchaser') as ticket_type,
	coalesce(b.pro_team, 'None Purchaser') as pro_team

from tmp_coaches_ as a
left join tmp_tickets_ as b
on a.email = b.email
left join tmp_zip_to_market_ as c
on a.club_name = c.club_name
order by email
;
